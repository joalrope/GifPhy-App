{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","index","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAG+B,IAA7BJ,EAAWK,OAAOC,SAClBR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAUT,EACVU,SApBa,SAACP,GACtBF,EAAeE,EAAEQ,OAAOF,Y,uBCPnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DAEJ,mCACTC,EAHa,iDAGoCC,UAAUH,GAH9C,8BAEJ,oCAFI,SAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,yBAAKc,UAAY,0CACb,yBAAKC,IAAOf,EAAMgB,IAAMN,IACxB,+BAAMA,EAAN,OCHCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAGEqB,EDlB4BK,CAAc1B,GAAnCa,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAqDhB,EAArD,KAEEoB,GAAW,uBAAGJ,UAAU,qCAAb,gBAEb,yBAAKA,UAAY,aAETH,EAAOJ,KAAK,SAAEC,GAAF,OACR,kBAAC,EAAD,eACIiB,IAAQjB,EAAIC,IACPD,UEdpBkB,EAAe,WAAO,IAAD,EAEM1C,mBAAU,CAAC,cAFjB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAEA,4BAEQS,EAAWe,KAAK,SAACT,EAAU6B,GAAX,OACZ,kBAAC,EAAD,CACIF,IAAG,UAAOE,EAAP,YAAgB7B,GACnBA,SAAaA,U,MCbzC8B,IAASC,OAAQ,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.5e1fad1c.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    // Maneja la entrada de nuevas categorias\n    const handleInputValue = (e) => {\n        setinputValue( e.target.value );\n    }\n    \n    // Se usa en evento submit del formulario para asignar el valor de3l inputValue y se limopia el input\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        // Se valida que la categoria debe tener al menos un caracter\n        if (inputValue.trim().length !== 0) {\n            setCategories( categories => [inputValue, ...categories, ]);\n            setinputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit = { handleSubmit }>\n            <input \n                type='text'\n                value = { inputValue }\n                onChange = { handleInputValue } \n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n// export default AddCategory;","\n\nexport const getGifs = async ( category ) => {\n\n    const apiKey = 'uBc8hZRlOLMVgyjXu9ddRxVl1qN6LRXk';\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }y&limit=10&api_key=${apiKey}`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ( { title, url} ) => {\n    \n    return (\n        <div className = 'card animate__animated animate__fadeIn'>\n            <img src= { url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading  } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'> { category } </h3>\n\n            { loading && <p className='\"animate__animated animate__flash'> Loading ...</p> }\n\n            <div className = 'card-grid'>\n                {\n                    images.map( ( img ) => (\n                        <GifGridItem \n                            key = { img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {    \n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs( category )\n            .then( imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false\n                });\n            })\n        \n    }, [ category ]);\n\n\n    return state;  //  { data: [], loading: bool };\n\n\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n// raf Crea estructura del componente\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState( ['One Punch'] );\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = { setCategories } />\n            <hr/>\n            \n            <ol>\n                {\n                    categories.map( (category, index) => (\n                        <GifGrid\n                            key = {`${index}-${category}`}    \n                            category = { category } \n                        />\n                    ))\n                }\n            </ol>\n        </>\n    );\n\n}\n\n// export default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render( <GifExpertApp />, document.getElementById('root'));"],"sourceRoot":""}